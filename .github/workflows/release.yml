name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22
    
    - name: Run all tests
      run: make test-all
    
    - name: Build for all platforms
      run: make build-all
    
    - name: Generate checksums
      run: |
        cd bin
        sha256sum deltagram-linux-amd64 > deltagram-linux-amd64.sha256
        sha256sum deltagram-linux-arm64 > deltagram-linux-arm64.sha256
        sha256sum deltagram-darwin-amd64 > deltagram-darwin-amd64.sha256
        sha256sum deltagram-darwin-arm64 > deltagram-darwin-arm64.sha256
        sha256sum deltagram-windows-amd64.exe > deltagram-windows-amd64.exe.sha256
        
        # Create combined checksums file
        cat *.sha256 > checksums.txt
    
    - name: Attest build artifacts
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: |
          bin/deltagram-linux-amd64
          bin/deltagram-linux-arm64
          bin/deltagram-darwin-amd64
          bin/deltagram-darwin-arm64
          bin/deltagram-windows-amd64.exe
    
    - name: Generate changelog
      id: changelog
      run: |
        # Simple changelog generation
        echo "## Changes" > CHANGELOG.md
        git log --oneline --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD~1)..HEAD >> CHANGELOG.md || echo "- Initial release" >> CHANGELOG.md
        
        # Use a unique delimiter that won't conflict with content
        delimiter=$(openssl rand -hex 8)
        echo "CHANGELOG<<$delimiter" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "$delimiter" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          bin/deltagram-linux-amd64
          bin/deltagram-linux-arm64
          bin/deltagram-darwin-amd64
          bin/deltagram-darwin-arm64
          bin/deltagram-windows-amd64.exe
          bin/deltagram-linux-amd64.sha256
          bin/deltagram-linux-arm64.sha256
          bin/deltagram-darwin-amd64.sha256
          bin/deltagram-darwin-arm64.sha256
          bin/deltagram-windows-amd64.exe.sha256
          bin/checksums.txt
        body: |
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Download and Verification
          
          Download the binary for your platform directly from the assets below. No need to extract archives!
          
          To verify the integrity of your download:
          ```bash
          # Download the binary and its checksum
          curl -LO https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/deltagram-linux-amd64
          curl -LO https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/deltagram-linux-amd64.sha256
          
          # Verify the checksum
          sha256sum -c deltagram-linux-amd64.sha256
          
          # Make executable
          chmod +x deltagram-linux-amd64
          ```
          
          All binaries are cryptographically signed and attested for supply chain security.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}